b = Friendship.create(user: friend, friend: user, status: 'requested')
a = Friendship.create(user: user, friend: friend, status: 'pending')
friend
user
exit
params
exit
user == current_user
user
current_user
!!Friendship.friend_exists?(current_user, user)
Friendship.friend_exists?(current_user, user)
exit
!!self.find_by_user_id_and_friend_id(user, friend)
user
exit
friend
user
!!self.find_by_user_id_and_friend_id(user, friend)
self.find_by_user_id_and_friend_id(user, friend)
!self.find_by_user_id_and_friend_id(user, friend).nil?
not self.find_by_user_id_and_friend_id(user, friend).nil?
user = self.find_by_user_id_and_friend_id(user, friend).nil?
user = self.find_by_user_id_and_friend_id(user, friend)
self
user
friend
exit
friend
user
exit
tag_ids
exit
user
current_scope
current_user
exit
@post = current_user.posts.build(post_params)
post_params
params
exit
params
exit
post_params
@post.tags
@post.save
@post = current_user.posts.build(post_params)
@post
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
current_page?(user_path(post.user))
post.user
post
current_page?(user_path(post.user))
exit
f.object
f
exit
params
exit
params
exit
comment_params
params
exit
params
exit
@post.photo.url
@post.photos
@post.photo[0].url
@post.photo[0]
@post.photo
@post.save
@post.photo
@post
params
exit
@post.photo
@post.photo.photo
@post.photo
post_params
@post
exit
@post.save
@post = current_user.posts.build(post_params)
current_user
params
exit
User.find_by_slug(params[:id])
current_user
params
exit
current_user
User.find_by_slug(params[:id])
exit
User.find_by_slug(params[:id])
current_user.posts.build
current_user.posts
current_user
exit
params
exit
current_user.posts
current_user
exit
u = User.find_by_id(params[:id])
params
